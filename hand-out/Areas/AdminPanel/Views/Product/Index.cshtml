@using static Sidekick.NET.Types
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<ListProductViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="row col-12">
    <div class="card mb-2">
        <div class="card-header pb-0">
            <div class="row mb-2 me-4">
                <h6 class="col">Products</h6>
            </div>
        </div>
        <div class="card-body px-0 pt-0 pb-2">
            <div class="table-responsive p-0">
                <table class="table align-items-center mb-0">
                    <thead>
                        <tr>
                            <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Product</th>
                            <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Address</th>
                            <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Grantor</th>
                            <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Category</th>
                            <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date Created/Modified</th>
                            <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date Published</th>
                            <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>
                            <th class="text-secondary opacity-7"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (ListProductViewModel product in Model)
                        {
                            <tr>
                                <td>
                                    <input class="product-id" type="hidden" value="@product.Id" />
                                    <div class="px-2 py-1">
                                        <a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id=@product.Id
                                           class="d-flex">
                                            <div>
                                                <img src="~/images/product-images/@product.PhotoURL.Split("|")[0]"
                                                     class="avatar me-3" alt="user6">
                                            </div>
                                            <div class="d-flex flex-column justify-content-center">
                                                <h6 class="mb-0 text-sm">@product.Name</h6>
                                                @*<p class="text-xs text-secondary mb-0 text-nowrap">
                                                        @(
                                                                product.Details.Length < 20
                                                                     ? product.Details
                                                                     : $"{product.Details.Substring(0, 20)}..."
                                                            )
                                                    </p>*@
                                            </div>
                                        </a>
                                    </div>
                                </td>
                                <td>
                                    <p class="text-xs font-weight-bold mb-0">
                                        <span class="bi bi-geo"></span>
                                        @product.Address
                                    </p>
                                </td>
                                <td>
                                    <p class="text-xs font-weight-bold mb-0">@product.GrantorUserName</p>
                                </td>
                                <td class="text-center">
                                    <span class="bi @product.CategoryFontAwesomeIconName"></span>
                                    <p class="text-xs font-weight-bold mb-0">
                                        @product.CategoryName
                                    </p>
                                </td>
                                <td class="align-middle text-center">
                                    <p class="text-xs text-secondary mb-0">@product.DateCreated</p>
                                    <p class="text-xs text-secondary mb-0">@product.DateModified</p>
                                </td>
                                <td class="align-middle text-center">
                                    <p class="text-xs text-secondary mb-0">@product.DatePublished</p>
                                </td>
                                <td class="align-middle text-center text-sm">
                                    <span class="product-status-indicator">@product.Status</span>
                                </td>
                                <td>
                                    <select class="form-select product-status-select" asp-items="Html.GetEnumSelectList<ProductStatus>()"></select>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer py-0">
            @(Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
                    new PagedListRenderOptions
                    {
                        UlElementClasses = new string [] { "pagination" },
                        LiElementClasses = new string [] { "page-item" },
                        PageClasses = new string [] { "page-link" },
                        Display = PagedListDisplayMode.IfNeeded
                    }))
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        let productStatusSelect = $(".product-status-select");
        let productStatusIndicatorSelector = ".product-status-indicator";
        let productStatusSelectSelector = ".product-status-select";

        let updateProductStatusSelector = function (status, productStatusSelect) {
            switch (status) {
                case "ACTIVE":
                    productStatusSelect.val("0").change();
                    break;
                case "GIVEN":
                    productStatusSelect.val("1").change();
                    break;
                case "PASSIVE":
                    productStatusSelect.val("2").change();
                    break;
            }
        };

        let updateProductStatusIndicator = function (status, productStatusIndicator) {
            productStatusIndicator.text(status);
            let productStatusIndicatorClass = "product-status-indicator badge badge-sm ";
            switch (status) {
                case "ACTIVE":
                    productStatusIndicatorClass += "bg-gradient-success";
                    break;
                case "GIVEN":
                    productStatusIndicatorClass += "bg-gradient-warning";
                    break;
                case "PASSIVE":
                    productStatusIndicatorClass += "bg-gradient-danger";
                    break;
                default:
                    productStatusIndicatorClass += "bg-gradient-success";
            }
            productStatusIndicator.attr("class", productStatusIndicatorClass);
        };

        $(productStatusIndicatorSelector).each(function () {
            let productStatus = $(this).text();
            updateProductStatusIndicator(productStatus, $(this));
            @*$(this).parent().siblings().children(productStatusIndicatorSelector).text("sdfsdfsd");*@
            updateProductStatusSelector(productStatus, $(this).parent().siblings().children(productStatusSelectSelector));
        });

        productStatusSelect.change(function (event) {
            let productStatusIndicator = $(this).parent().siblings().children(productStatusIndicatorSelector);
            let selectedOption = $(this).find(":selected");
            let selectedOptionText = selectedOption.text();
            let productId = $(this).parent().siblings().children(".product-id").val();
            updateProductStatusIndicator(selectedOptionText, productStatusIndicator);
            updateProductStatus(selectedOption.val(), productId);
        });


        function updateProductStatus(status, id) {
            $.ajax({
                method : "POST",
                url: "/adminPanel/product/updateProductStatus",
                data: { productStatus: status, productId: id },
                async: false,
            });
        };
    });
</script>