@{
    ViewData["Title"] = "Message/Index";
}

<head>
    <script src="~/microsoft/signalr/dist/browser/signalr.min.js"></script>
</head>

<div class="container pt-8">
    <div class="row">
        <div id="chat-list" class="col-lg-4">
            <div class="card max-height-vh-80 vh-100 shadow-lg">
                <div class="card-header p-3 border-bottom">
                    <h6 class="mb-0">Messages</h6>
                </div>
                <div class="card-body py-0 px-md-3 overflow-auto">
                    <ul id="chat-list-area" class="list-group">
                        <!-- Chatlist will create here -->
                    </ul>
                </div>
            </div>
        </div>
        <div id="chat" class="col-lg-8">
            <div class="card max-height-vh-80 vh-100 shadow-lg py-3 px-lg-5 px-1">
                <div class="card-header d-flex border-bottom border-dark">
                    <div id="cancel-chat-btn" class="d-flex col-1 me-md-3 me-1">
                        <button class="btn shadow-none mb-0 p-0">
                            <span class="fa fa-arrow-left fa-lg"></span>
                        </button>
                    </div>
                    <div class="d-flex col">
                        <div class="avatar me-lg-3 me-1">
                            <img src="../assets/img/kal-visuals-square.jpg" id="receiver-img" alt="kal" class="border-radius-lg shadow">
                        </div>
                        <div class="d-flex align-items-start flex-column justify-content-center">
                            <h6 id="receiver-user-name" class="mb-0 text-sm"></h6>
                        </div>
                    </div>
                    <div class="d-flex col justify-content-end">
                        <div class="my-auto me-2">
                            <h6 id="product-name" class="mb-0 text-sm"></h6>
                        </div>
                        <div class="avatar">
                            <img id="product-img" src="" alt="kal" class="border-radius-lg shadow h-100">
                        </div>
                        <a class="my-auto ms-lg-5 ms-2">
                            <span class="fa fa-ellipsis-v fa-lg"></span>
                        </a>
                    </div>
                </div>
                <div id="message-area" class="card-body p-3 overflow-auto">
                </div>
                <div class="card-footer">
                    <div class="input-group shadow-lg">
                        <input type="text" id="message-box" class="form-control border-0" />
                        <button type="button" id="message-send-btn" class="btn btn-dark mb-0 shadow-none">
                            <span class="fa fa-send text-light"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    {
        $(document).ready(function () {
            const chatSection = $("#chat");
            const chatListSection = $("#chat-list");
            const chatListArea = $("#chat-list-area");
            const messageArea = $("#message-area");
            const receiverUserName = $("#receiver-user-name");
            const receiverImg = $("#receiver-img");
            const productName = $("#product-name");
            const productImg = $("#product-img");

            const mdSize = 768;
            const lgSize = 992;

            let width;
            let currentProductId = @ViewBag.ProductId;
            console.log(currentProductId);

            let chats = getChats();
            createChatList();
            let activeChat;

            class Message {
                constructor(chatId, productId, receiverId, context) {
                    this.chatId = chatId;
                    this.productId = productId;
                    this.receiverId = receiverId;
                    this.context = context;
                }
            }

           class ActiveChat {
               constructor(id, prodcutId, productName, productPhotoURL,
                   receiverParticipantId, receiverParticipantUserName, receiverParticipantPhotoURL,
                   messages) {
                   this.id = id;
                   this.prodcutId = prodcutId;
                   this.productName = productName;
                   this.productPhotoURL = productPhotoURL;
                   this.receiverParticipantId = receiverParticipantId;
                   this.receiverParticipantUserName = receiverParticipantUserName;
                   this.receiverParticipantPhotoURL = receiverParticipantPhotoURL;
                   this.messages = messages;
                }
            }

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("http://localhost:44398/chathub")
                .withAutomaticReconnect()
                .build();

            @*async function startConnection() {
                try {
                    await connection.start();
                } catch (error) {
                    setTimeout(() => connection.start(), 2000);
                }
            }*@

            @*startConnection();*@

            if (currentProductId !== 0) {
                activeChat = getActiveChat();
                console.log(typeof(activeChat));
                updateActiveChatUI(activeChat);
            }
            else
                chatSection.hide();


            $("#message-send-btn").click(() => {
                let messageBox = $("#message-box");
                let messageContext = messageBox.val();

                if (!messageContext)
                    return;

                messageBox.val("");

                connection.invoke("SendMessageAsync", activeChat.receiverParticipantId, messageContext);
                createSentMessage(messageContext);
                saveMessage(new Message(activeChat.Id, currentProductId, activeChat.receiverParticipantId, messageContext));
            });

            connection.on("receiveMessage", messageContext => {
                createReceivedMessage(messageContext);
            });

            function createReceivedMessage(messageContext) {
                messageArea.append($("#received-message-prefab").html());
                $(".received-message-bubble .message-content:last").text(messageContext);
                $(".received-message-bubble .message-sent-date:last").text(new Date().toLocaleTimeString());
            }

            function createSentMessage(messageContext) {
                messageArea.append($("#sent-message-prefab").html());
                $(".sent-message-bubble .message-content:last").text(messageContext);
                $(".sent-message-bubble .message-sent-date:last").text(new Date().toLocaleTimeString());
            }

            function createChatList() {
                for (let i = 0; i < chats.length; i++) {
                    let currentItem = chats[i];
                    chatListArea.append($("#chat-list-item-prefab").html());
                    $(".chat-list-item .receiver-user-name:last").text(currentItem.receiverParticipantUserName);
                    $(".chat-list-item .receiver-photo:last").attr("src", `images/profile-images/${currentItem.receiverParticipantPhotoURL}`);
                    $(".chat-list-item .chat-reply-btn:last").val(currentItem.productId);
                }
            }
            resize();
            $(window).resize(resize);

            function resize() {
                width = $(window).width();
                if (width >= lgSize) {
                    chatSection.show();
                    chatListSection.show();
                }
                else {
                    console.log(typeof (activeChat));
                    if ($.isEmptyObject(activeChat)) {
                        chatSection.hide();
                        chatListSection.show();
                        console.log("bos amg")
                    }
                    else {
                        console.log("filled")
                        chatSection.show();
                        chatListSection.hide();
                    }
                }
            }

            $(function () {
                $(".chat-reply-btn").click(function() {
                    chatSection.show();
                    if (width < lgSize) {
                        chatListSection.hide();
                    }
                    currentProductId = $(this).val();
                    activeChat = getActiveChat();
                    updateActiveChatUI(activeChat);
                });
            });


            function getChats() {
                let chatsReturn = new Array();
                $.ajax({
                    url: "/message/getChats",
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        chatsReturn = JSON.parse(JSON.stringify(data));
                    }
                });
                return chatsReturn;
            }

            function getActiveChat() {
                let activeChatReturn;
                $.ajax({
                    url: "/message/getActiveChatViewModel",
                    dataType: "json",
                    data: { productId: currentProductId },
                    async: false,
                    success: function (data) {
                        activeChatReturn = JSON.parse(JSON.stringify(data));
                    }
                });

                return activeChatReturn;
                @*return new ActiveChat(
                    activeChatReturn.id,
                    activeChatReturn.productId,
                    activeChatReturn.productName,
                    activeChatReturn.productPhotoURL,
                    activeChatReturn.receiverParticipantId,
                    activeChatReturn.receiverParticipantUserName,
                    activeChatReturn.receiverParticipantUserProfilePhotoURL,
                    activeChatReturn.messages);*@
            }

            function updateActiveChatUI(activeChat) {
                console.log(activeChat);
                productName.text(activeChat.productName);
                let url = activeChat.productPhotoURL.split("|")[0];
                productImg.attr("src", `images/product-images/${url}`);
                receiverUserName.text(activeChat.receiverParticipantUserName);
                receiverImg.attr("src", `images/profile-images/${activeChat.receiverParticipantPhotoURL}`);

                messageArea.empty();

                if (activeChat.messages == null)
                    return;

                let messageList = activeChat.messages;
                for (let i = 0; i < messageList.length; i++) {
                    let currentItem = messageList[i]
                    if (currentItem.isYourMessage) {
                        createSentMessage(currentItem.context);
                    }
                    else
                        createReceivedMessage(currentItem.context);
                }
            }

            function saveMessage(message) {
                $.ajax({
                    type: "POST",
                    url: "/message/saveMessage",
                    dataType: "json",
                    data: { createMessageDTO: message }
                });
            }

            $("#cancel-chat-btn").click(() => {
                chatSection.hide();
                chatListSection.show();
            });
        });
    }
</script>

<script type="text/html" id="sent-message-prefab">
    <div class="sent-message-bubble d-flex my-1 ms-5 justify-content-end">
        <div class="card d-inline-block float-end py-2 ps-3 pe-4 rounded-3 border text-dark">
            <p class="message-content mb-1 text-end"></p>
            <p class="message-sent-date mb-0 text-secondary text-xs">20:04</p>
        </div>
    </div>
</script>

<script type="text/html" id="received-message-prefab">
    <div class="received-message-bubble d-flex my-2 me-5">
        <div class="card d-inline-block py-2 ps-3 pe-4 rounded-3 bg-gradient-dark text-white">
            <p class="message-content mb-1"></p>
            <p class="message-sent-date mb-0 text-secondary text-xs text-end">20:04</p>
        </div>
    </div>
</script>

<script type="text/html" id="chat-list-item-prefab">
    <li class="chat-list-item list-group-item border-0 d-flex align-items-center px-0 my-1">
        <div class="avatar me-3">
            <img src="../assets/img/kal-visuals-square.jpg" alt="kal" class="receiver-photo border-radius-lg shadow">
        </div>
        <div class="d-flex align-items-start flex-column justify-content-center">
            <h6 class="receiver-user-name mb-0 text-sm">Sophie B.</h6>
            <p class="last-message mb-0 text-xs">Hi! I need more information..</p>
        </div>
        <button class="chat-reply-btn btn btn-link pe-3 ps-0 mb-0 ms-auto" data-bs-toggle="collapse">Reply</button>
    </li>
</script>