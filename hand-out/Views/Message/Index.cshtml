@{
    ViewData["Title"] = "Message/Index";
}

<head>
    <script src="~/microsoft/signalr/dist/browser/signalr.min.js"></script>
</head>

<div class="container pt-7">
    <div class="row">
        <div id="chat-list" class="col-lg-4">
            <div class="card max-height-vh-80 vh-100 shadow-lg">
                <div class="card-header p-3 border-bottom">
                    <h6 class="mb-0">Chats</h6>
                </div>
                <div class="card-body py-0 px-lg-3 px-2 overflow-auto">
                    <ul id="chat-list-area" class="list-group">
                        Chats are loading...
                    </ul>
                </div>
            </div>
        </div>
        <div id="chat" class="col-lg-8" style="display:none;">
            <div class="card max-height-vh-80 vh-100 shadow-lg py-lg-3 px-lg-5 d-flex">
                <div class="card-header border-bottom border-dark  px-0">
                    <div class="d-flex align-items-center px-md-4 px-2">
                        <div id="cancel-chat-btn" class="col-auto d-flex align-items-center me-lg-4 me-2">
                            <button class="btn shadow-none mb-0 p-0">
                                <span class="fa fa-arrow-left fa-lg"></span>
                            </button>
                        </div>
                        <div class="col-auto">
                            <a class="receiver-link" asp-controller="User" asp-action="Details" asp-route-id="">
                                <div class="avatar d-flex align-items-center">
                                    <img src="../assets/img/kal-visuals-square.jpg" id="receiver-img" alt="kal"
                                         class="img-cover w-100 h-100 border-radius-lg shadow">
                                </div>
                            </a>
                        </div>
                        <div class="col-lg-8 col-6 text-nowrap overflow-hidden ms-md-3 ms-2 me-auto">
                            <a class="receiver-link" asp-controller="User" asp-action="Details" asp-route-id="">
                                <h6 id="receiver-user-name" class="mb-0 text-sm"></h6>
                            </a>
                            <a class="product-link" asp-controller="Product" asp-action="Details" asp-route-id="">
                                <h6 id="product-name" class="mb-0 text"></h6>
                            </a>
                        </div>
                        <div class="col-auto ms-md-2 ms-1 me-lg-4 me-2">
                            <a class="product-link" asp-controller="Product" asp-action="Details" asp-route-id="">
                                <div class="avatar d-flex align-items-center">
                                    <img src="/images/product-images/kidstudydesk-0112b4046d0a4769a9764c328552b19b.jpg" id="product-img" alt="kal"
                                         class="img-cover w-100 h-100 border-radius-lg shadow">
                                </div>
                            </a>
                        </div>
                        <div class="col-auto">
                            <a>
                                <span class="fa fa-ellipsis-v fa-lg"></span>
                            </a>
                        </div>
                    </div>
                </div>
                <div id="message-area" class="card-body p-3 overflow-auto">
                </div>
                <div class="card-footer">
                    <div class="input-group shadow-lg">
                        <input type="text" id="message-box" class="form-control border-0" />
                        <button type="button" id="message-send-btn" class="btn btn-dark mb-0 shadow-none">
                            <span class="fa fa-send text-light"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    {
        $(document).ready(function () {
            const chatSection = $("#chat");
            const chatListSection = $("#chat-list");
            const chatListArea = $("#chat-list-area");
            const messageArea = $("#message-area");
            const receiverUserName = $("#receiver-user-name");
            const receiverImg = $("#receiver-img");
            const receiverLink = $(".receiver-link");
            const productLink = $(".product-link");
            const productName = $("#product-name");
            const productImg = $("#product-img");

            const mdSize = 768;
            const lgSize = 992;

            let width;
            let currentProductId = @ViewBag.ProductId;
            console.log("%s Current Product", currentProductId);

            let assignReplyButtonClick;

            let activeChat;

            let chats = getChats();
            let chatElements = new Array();

            let CHATITEM = function (id, productPhotoURL, receiverUserName, receiverPhotoURL, lastMessage) {
                this.id = id;
                this.productPhotoURL = productPhotoURL;
                this.receiverUserName = receiverUserName;
                this.receiverPhotoURL = this.receiverPhotoURL;
                this.lastMessage = lastMessage;
            }

            class Message {
                constructor(chatId, productId, receiverId, context) {
                    this.chatId = chatId;
                    this.productId = productId;
                    this.receiverId = receiverId;
                    this.context = context;
                }
            }

            class ActiveChat {
                constructor(id, prodcutId, productName, productPhotoURL,
                    receiverParticipantId, receiverParticipantUserName, receiverParticipantPhotoURL,
                    messages) {
                    this.id = id;
                    this.prodcutId = prodcutId;
                    this.productName = productName;
                    this.productPhotoURL = productPhotoURL;
                    this.receiverParticipantId = receiverParticipantId;
                    this.receiverParticipantUserName = receiverParticipantUserName;
                    this.receiverParticipantPhotoURL = receiverParticipantPhotoURL;
                    this.messages = messages;
                }
            }

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chathub")
                .withAutomaticReconnect()
                .build();

            startConnection();

            async function startConnection() {
                try {
                    await connection.start();
                } catch (error) {
                    setTimeout(() => connection.start(), 2000);
                }
            }

            assignReplyButtonClick = function () {
                chatSection.show();
                if (width < lgSize) {
                    chatListSection.hide();
                }
                let chatId = $(this).attr("data-chat-id");
                activeChat = getActiveChat(chatId);
                console.log(activeChat);
                currentProductId = activeChat.productId;
                updateActiveChatUI(activeChat);
            }

            createChatList();

            $("#message-send-btn").click(() => {
                let messageBox = $("#message-box");
                let messageContext = messageBox.val();

                if (!messageContext)
                    return;

                messageBox.val("");
                createSentMessage(messageContext);
                saveMessage(new Message(activeChat.Id, currentProductId, activeChat.receiverParticipantId, messageContext));

                let chatSendMessageDTO = new Object();
                if (activeChat.id === "" || activeChat.id === "undefined" || activeChat.id === null) {
                    chatSendMessageDTO.id = getChatId(activeChat.productId, activeChat.receiverParticipantId);
                    activeChat = getActiveChat(chatSendMessageDTO.id);
                    updateActiveChatUI(activeChat);
                    let chatItem = {
                        id: chatSendMessageDTO.id,
                        receiverParticipantUserName: activeChat.receiverParticipantUserName,
                        receiverParticipantPhotoURL: activeChat.receiverParticipantPhotoURL,
                        productPhotoURL: activeChat.productPhotoURL,
                        lastMessage: messageContext
                    }

                    createChatItem(chatItem);
                }
                else {
                    chatSendMessageDTO.id = activeChat.id;
                }

                chatSendMessageDTO.productId = activeChat.productId;
                chatSendMessageDTO.receiverId = activeChat.receiverParticipantId;
                chatSendMessageDTO.senderId = "@ViewBag.CurrentUserId";
                console.log(chatSendMessageDTO.id);

                let currentChatElement = chatElements.find(x => x.attr("id") === chatSendMessageDTO.id);
                chatListArea.prepend(currentChatElement);

                $(".chat-list-item .last-message:first").text(messageContext);
                $(".chat-list-item:first").effect("highlight", { color: "#fbcf33" }, 3000);

                connection.invoke("SendMessageAsync", chatSendMessageDTO, messageContext);
            });

            connection.on("receiveMessage", (messageContext, chatSendMessageDTO) => {
                if (typeof (chatElements.find(x => x.attr("id") === chatSendMessageDTO.id)) === "undefined") {
                    let chitChat = getActiveChat(chatSendMessageDTO.id, "");
                    let chatItem = {
                        id: chitChat.id,
                        receiverParticipantUserName: chitChat.receiverParticipantUserName,
                        receiverParticipantPhotoURL: chitChat.receiverParticipantPhotoURL,
                        productPhotoURL: chitChat.productPhotoURL,
                        lastMessage: messageContext
                    }

                    createChatItem(chatItem);
                }

                let currentChatElement = chatElements.find(x => x.attr("id") === chatSendMessageDTO.id);
                chatListArea.prepend(currentChatElement);

                $(".chat-list-item .last-message:first").text(messageContext);
                $(".chat-list-item:first").effect("highlight", { color: "#fbcf33" }, 3000);

                if (activeChat.id === chatSendMessageDTO.id) {
                    createReceivedMessage(messageContext);
                }
            });

            function createSentMessage(messageContext, dateSent) {
                messageArea.append($("#sent-message-prefab").html());
                $(".sent-message-bubble .message-content:last").text(messageContext);

                if (typeof (dateSent) === "undefined") {
                    $(".sent-message-bubble .message-sent-date:last").text(new Date().toLocaleTimeString().slice(0, 5));
                }
                else {
                    $(".sent-message-bubble .message-sent-date:last").text(dateSent.slice(11, 16));
                }

                $("#message-area").scrollTop($("#message-area")[0].scrollHeight);
            }

            function createReceivedMessage(messageContext, dateSent) {
                messageArea.append($("#received-message-prefab").html());
                $(".received-message-bubble .message-content:last").text(messageContext);

                if (typeof (dateSent) === "undefined") {
                    $(".received-message-bubble .message-sent-date:last").text(new Date().toLocaleTimeString().slice(0, 5));
                }
                else {
                    $(".received-message-bubble .message-sent-date:last").text(dateSent.slice(11, 16));
                }

                $("#message-area").scrollTop($("#message-area")[0].scrollHeight);
            }

            function createChatList() {
                chatListArea.empty();
                for (let i = 0; i < chats.length; i++) {
                    let currentItem = chats[i];
                    createChatItem(currentItem);
                }
            }

            function createChatItem(chatItem) {
                chatListArea.append($("#chat-list-item-prefab").html());
                $(".chat-list-item:last").attr("id", chatItem.id);
                $(".chat-list-item:last").attr("data-chat-id", chatItem.id);
                $(".chat-list-item .receiver-user-name:last").text(chatItem.receiverParticipantUserName);
                $(".chat-list-item .receiver-photo:last").attr("src", `images/profile-images/${chatItem.receiverParticipantPhotoURL}`);
                $(".chat-list-item .product-photo:last").attr("src", `images/product-images/${returnProductThumbnail(chatItem.productPhotoURL)}`);
                $(".chat-list-item .last-message:last").text(chatItem.lastMessage);

                let chatElement = $(".chat-list-item:last");
                chatElements.push(chatElement);

                $(".chat-list-item:last").click(assignReplyButtonClick);
            }

            console.log(chatElements);

            if (currentProductId !== 0) {
                activeChat = getActiveChat();
                console.log(typeof (activeChat));
                updateActiveChatUI(activeChat);
            }

            resize();
            $(window).resize(resize);

            function resize() {
                width = $(window).width();

                chatSection.hide();
                chatListSection.hide();

                if (!$.isEmptyObject(activeChat)) {
                    chatSection.show();

                    if (width >= lgSize) {
                        chatListSection.show();
                    }
                }
                else {
                    chatListSection.show();
                }
            }

            function getChats() {
                let chatsReturn = new Array();
                $.ajax({
                    url: "/message/getChats",
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        chatsReturn = JSON.parse(JSON.stringify(data));
                    }
                });
                return chatsReturn;
            }

            function getChatId(productId, receiverId) {
                let chatIdReturn;
                $.ajax({
                    url: "/message/getChatId",
                    dataType: "json",
                    data: { productId: productId, receiverId: receiverId },
                    async: false,
                    success: function (data) {
                        chatIdReturn = data;
                    }
                });

                return chatIdReturn;
            }

            function getActiveChat(chatId) {
                let activeChatReturn;
                $.ajax({
                    url: "/message/getActiveChatViewModel",
                    dataType: "json",
                    data: { chatId: chatId, productId: currentProductId },
                    async: false,
                    success: function (data) {
                        activeChatReturn = JSON.parse(JSON.stringify(data));
                    }
                });

                return activeChatReturn;
                @*return new ActiveChat(
                    activeChatReturn.id,
                    activeChatReturn.productId,
                    activeChatReturn.productName,
                    activeChatReturn.productPhotoURL,
                    activeChatReturn.receiverParticipantId,
                    activeChatReturn.receiverParticipantUserName,
                    activeChatReturn.receiverParticipantUserProfilePhotoURL,
                    activeChatReturn.messages);*@
            }

            function updateActiveChatUI(activeChat) {
                console.log(activeChat);
                productName.text(activeChat.productName);
                let productImgURL = activeChat.productPhotoURL.split("|")[0];
                productImg.attr("src", `images/product-images/${productImgURL}`);
                receiverUserName.text(activeChat.receiverParticipantUserName);
                receiverImg.attr("src", `images/profile-images/${activeChat.receiverParticipantPhotoURL}`);
                let receiverURL = `User/Details?id=${activeChat.receiverParticipantId}`;
                let productURL = `Product/Details?id=${activeChat.productId}`;
                receiverLink.attr("href", receiverURL);
                productLink.attr("href", productURL);
                messageArea.empty();

                if (activeChat.messages == null)
                    return;

                let messageList = activeChat.messages;
                for (let i = 0; i < messageList.length; i++) {
                    let currentItem = messageList[i]
                    if (currentItem.isYourMessage) {
                        createSentMessage(currentItem.context, currentItem.dateSent);
                    }
                    else
                        createReceivedMessage(currentItem.context, currentItem.dateSent);
                }

                $("#message-area").scrollTop($("#message-area")[0].scrollHeight);
            }

            function saveMessage(message) {
                $.ajax({
                    type: "POST",
                    url: "/message/saveMessage",
                    dataType: "json",
                    async : false,
                    data: { createMessageDTO: message }
                });
            }

            $("#cancel-chat-btn").click(() => {
                chatSection.hide();
                chatListSection.show();
                activeChat = null;
            });

            function returnProductThumbnail(productPhotoUrl) {
                return productPhotoUrl.split("|")[0];
            }
        });
    }
</script>

<script type="text/html" id="sent-message-prefab">
    <div class="sent-message-bubble d-flex my-1 ms-5 justify-content-end">
        <div class="card d-inline-block float-end py-2 ps-3 pe-4 rounded-3 border text-dark">
            <p class="message-content mb-1 text-end"></p>
            <p class="message-sent-date mb-0 text-secondary text-xs">20:04</p>
        </div>
    </div>
</script>

<script type="text/html" id="received-message-prefab">
    <div class="received-message-bubble d-flex my-2 me-5">
        <div class="card d-inline-block py-2 ps-3 pe-4 rounded-3 bg-gradient-dark text-white">
            <p class="message-content mb-1"></p>
            <p class="message-sent-date mb-0 text-secondary text-xs text-end">20:04</p>
        </div>
    </div>
</script>

<script type="text/html" id="chat-list-item-prefab">
    <li class="chat-list-item list-group-item d-flex align-items-center px-0 my-1 border-0" 
        data-chat-id="" data-bs-toggle="collapse">
        <div class="avatar col-auto me-2">
            <img src="../assets/img/kal-visuals-square.jpg" alt="kal"
                 class="receiver-photo h-100 w-100 img-cover border-radius-lg shadow">
        </div>
        <div class="d-flex col-6 me-2 align-items-start flex-column justify-content-center overflow-hidden">
            <h6 class="receiver-user-name mb-0 text-sm">Sophie B.</h6>
            <p class="last-message mb-0 text-xs text-nowrap">Hi! I Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velitn.</p>
        </div>
        <div class="avatar col-auto ms-auto me-md-2 me-1">
            <img src="../assets/img/kal-visuals-square.jpg" alt="kal"
                 class="product-photo h-100 w-100 img-cover border-radius-lg shadow">
        </div>
        <span class="chat-reply-btn col-auto btn btn-link p-0 m-0">Reply</span>
    </li>
</script>